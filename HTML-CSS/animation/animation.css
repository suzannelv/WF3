footer{
    margin-top:10px;
}

/* en même temps je stylise mon ducument, j'introduit la notion de variables en CSS */
/* on place 2 tirets avant le nom de notre variable */
/* pour appeler nos variables, on utilise var (--ma variable) */
html{
    --main-color:#2a0481;
    --sec-color:#fc9d21;

}

.container1, .container4 .btn{
    margin:auto;
    background-color: var(--main-color);
    color:var(--sec-color);
    font-size:2em;
    padding:0.5em;
    width: 10em ;
    text-align: center;
    border-radius: 10px;
    border: 1px solid var(--sec-color);
    box-shadow: rgba(0, 0, 0, 0.349) 0px 5px 15px;
    cursor: pointer;
    transform: scale(1);
    /* on peut aussi écrire les 2 lignes suivantes de la sorte: transition:transforme 1s; */
    transition-property: transform;
    transition-duration: 2s; /*ou 1000ms*/
}
/* au survol de la souris, je souhaite que mon élément grandisse et change de couleur*/
.container1 .btn:hover{
    transform: scale(1.5);
    background-color:var(--sec-color) ;
    color:var(--main-color);
    border: 1px solid var(--main-color);
}

/* je change le texte au survol */
.mon-texte:hover span{
    display: none;
}
.mon-texte:hover:after{
    content:"mon texte qui a changé";
}

/* .case{
    width: 500px;
    background-color: antiquewhite;
    font-size: 19px;
    color: #fc9d21;
    border:1px solid black;
    padding:10px;
    transition: all 1s linear;
}
.case:hover{
    background-color: #2a0481;
}
.case h3:hover{
    color: aqua;
    font-size: 40px;
}
.case .txt:hover{
    height: 220x;
    padding:10px:
    
} */

/* validation du focus */
.container2 form{
    width: 10em;
    margin:auto;
}
.container2{
    background-color: bisque;
    min-height: 5em;
}

.container2 form input{
    border:2px solid blueviolet;
    border-radius: 10px;
    padding:0.5em;
    font-family: Georgia, 'Times New Roman', Times, serif;
    /* pour supprimer ma bordure rouge du navigateur */
    /* outline:none; */
}
/*  */
.container2 form input:focus{
    border:2px solid orange;
}
/* cette technique est valid mais peut potentiellement induire les utilisateurs en erreur, nous allons donc combiner invalid et focus avec not() */
/* .container2 form input:invalid{
    border:2px solid red;
} */
.container2 form input:not(:focus):invalid{
    border:2px solid red;
}
/* .container2 form input:valid{
    border:2px solid green;
} */

/* déclenchement évènement pseudo-classes */
/* les pseudoclasses les plus utilisées pour déclecher une tranition sont:
   -:hover
   -:active
   -:invalid
   -:checked
   -:not()
   -:enabled
   -:disabled */
.container3{
    display: flex;
    flex-direction: column-reverse;
}
.container3 .circle{
    width: 5em;
    height: 5em;
    margin: 2em auto;
    border-radius: 50%;
    background-color: #fc9d21;
    /* on peut aussi mettre des transition */
    transform: scale(0.5);
    transition: transform 500ms;
}
.container3, .container5 .btn{
    margin:auto;
    background-color: var(--main-color);
    color:var(--sec-color);
    font-size:2em;
    padding:0.5em;
    width: 10em ;
    text-align: center;
    border-radius: 10px;
    border: 1px solid var(--sec-color);
    box-shadow: rgba(0, 0, 0, 0.349) 0px 5px 15px;
    cursor: pointer;

}
/* + une balise juste après l'autre */
.container3 .btn:active + .circle{
    transform: scale(1.5);
}

/* transition +propriétés multiples */
.container4 .btn{
    transform: scale(1);
    /* on peut utiliser all pour appliquer la transition sur toutes les propriétés */
    transition: all 500ms;
}
.container4 .btn:hover, .container5 .btn:hover{
    transform: scale(1.5);
    background-color: var(--sec-color);
    color:var(--main-color);
    border:2px solid red;

}
.container5 {
    margin-top: 3em;
}
.container5 .btn{
   
    transition: transform 1s, background-color 500ms;
    /* pour retarder l'animation */
    transition-delay: 0, 500ms;

}
footer ul{
    display: 
    flex;
}

footer ul li{
    list-style-type: none;
    margin:0 2em;
    font-size:3em;
}
.rating ul li{
    list-style-type: none;
    
}
