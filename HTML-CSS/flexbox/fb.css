.container-1 div, .container-2 div, .container-3 div, .container-4 div{
    width: 100px;
    height: 100px;
    margin: 2em;
}

.container-1 div:first-of-type, .container-2 div:first-of-type, .container-3 div:first-of-type, .container-4 div:first-of-type, .container-5 div:first-of-type{
    background-color: brown;

}
.container-1 div:nth-child(2), .container-2 div:nth-child(2),.container-3 div:nth-child(2),.container-4 div:nth-child(2), .container-5 div:nth-child(2){
    border: 1px solid black;
}
.container-1 div:last-of-type, .container-2 div:last-of-type, .container-3 div:last-of-type, .container-4 div:last-of-type, .container-5 div:last-of-type{
    background-color: rgb(23, 104, 104);
}
/* afin de positonner les éléments en rangée, j'utilise le flexbox sur le parent des 3 div, à savoir la div=class="container-1" */
.container-1{
    display: flex;
}
.container-2{
    display: flex ;
    flex-direction: column;
}
/* la rangée inversée */
.container-3{
    flex-direction: row-reverse;
}
/* la colonne inversée */
.container-4{
    flex-direction: column-reverse;

}
/* le retour à la ligne */

/* par défaut les blocs essaient de rester sur la même ligne, c'est équivalent de la propriété flex-wrap: nowrap */
.container-5 div {
    flex-wrap: wrap;
    width: 400px;
    height: 400px;
    margin: 2em;
}
/* de la même manière; on peut utiliser flex-wrap: wrap-reverse, ce qui positionnera les éléments dans le sens inverse */
/* à la ligne */
/* s'aligner sur l'axe principal:
pour changer leur alignement, on va utiliser la propriété justify-content, celle-ci peut prendre les valeurs suivantes:
  flex-star
  flex-end
  center
  space-between
  space- */
  .container-6 img{
    width: 100vw;
  }